name: CI Build & Test

on:
  push:
  pull_request:

jobs:
  backend-ci:
    name: Backend CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Cargo Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: clippy

      - name: Install cargo-audit
        run: cargo install cargo-audit

      - name: Check for vulnerabilites
        run: cargo audit

      - name: Check formatting
        run: cargo fmt --check

      - name: Lint with Clippy
        run: cargo clippy -- -D warnings

      - name: Run Tests
        run: cargo test

  frontend-ci:
    name: Frontend CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js for Linter
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Configure and run ESLint
        run: |
          echo '{
            "name": "frontend",
            "version": "1.0.0",
            "type": "module",
            "devDependencies": {
              "eslint": "9.31.0",
              "@eslint/js": "9.31.0"
            }
          }' > package.json
          npm install
          echo 'import js from "@eslint/js";
          export default [
            {
              ignores: ["assets/fonts", "assets/img", "assets/styles", "errors/"],
            },
            js.configs.recommended,
            {
              files: ["**/*.js"],
              languageOptions: {
                ecmaVersion: 2022,
                sourceType: "module",
                globals: {
                  window: "readonly",
                  document: "readonly",
                },
              },
              rules: {
                "no-unused-vars": "warn",
                "no-undef": "error",
                "no-console": "off",
              }
            }
          ];' > eslint.config.js
          npx eslint assets/scripts/*.js
